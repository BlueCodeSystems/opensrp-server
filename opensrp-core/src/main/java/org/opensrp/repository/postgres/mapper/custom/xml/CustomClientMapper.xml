<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.opensrp.repository.postgres.mapper.custom.CustomClientMapper">
	
	<insert id="insertSelectiveAndSetId" parameterType="org.opensrp.domain.postgres.Client"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into core.client
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="json != null">
				json,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="json != null">
				#{json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.ClientTypeHandler},
			</if>
		</trim>
	</insert>
	
	
	<select id="selectByDocumentId" parameterType="java.lang.String"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap.Base_Column_List" />
		from core.client
		WHERE json ->> 'id' = #{documentId,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectByIdentifier" parameterType="java.lang.String"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap.Base_Column_List" />
		from core.client
		join jsonb_each_text(core.client.json -> 'identifiers') j on true
		where j.value = #{identifier,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectByIdentifierOfType" parameterType="map"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap.Base_Column_List" />
		from core.client
		where json -> 'identifiers' ->> #{identifierType,jdbcType=VARCHAR} = #{identifier,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectByAttributeOfType" parameterType="map"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap.Base_Column_List" />
		from core.client
		where json -> 'identifiers' ->> #{attributeType,jdbcType=VARCHAR} = #{attribute,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectByRelationshipIdAndDateCreated" parameterType="map"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap.Base_Column_List" />
		from core.client
		join jsonb_each(json -> 'relationships') j on true
		where j.value ->> 0 = #{relationalId,jdbcType=VARCHAR}
			and (json #>> '{dateCreated}')::date between #{dateFrom,jdbcType=VARCHAR} and #{dateTo,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectByRelationshipIdOfType" parameterType="map"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap.Base_Column_List" />
		from core.client
		where json -> 'relationships'->#{relationshipType,jdbcType=VARCHAR}->> 0 = #{relationshipId,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectByRelationShip" parameterType="java.lang.String"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap.Base_Column_List" />
		from core.client
		join jsonb_each(json -> 'relationships') j on true
		where j.value ->> 0 = #{relationshipId,jdbcType=VARCHAR}
	</select>
	
	
	<select id="selectByDynamicQuery" parameterType="java.lang.String"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap.Base_Column_List" />
		from core.client
		where json @> #{query,jdbcType=VARCHAR}
	</select>
	
	
</mapper>